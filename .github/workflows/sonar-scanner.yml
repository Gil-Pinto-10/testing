name: SAST Scan with SonarQube and DefectDojo

on:
  workflow_dispatch:

jobs:
  sast:
    runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Skip setup-dotnet (already installed)
        run: dotnet --info

      - name: Install SonarScanner for MSBuild
        run: |
          dotnet tool install --global dotnet-sonarscanner
          echo "DOTNET_TOOLS path: $HOME/.dotnet/tools"
          echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

      - name: Begin SonarQube Analysis
        run: |
          dotnet-sonarscanner begin /k:"my-csharp-app" \
            /d:sonar.login="${{ secrets.SONAR_TOKEN }}" \
            /d:sonar.host.url="http://localhost:9000"
          dotnet build VulnerableWebApi/VulnerableWebApi.csproj

      - name: End SonarQube Analysis
        run: |
          dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

      - name: Export SonarQube Scan to JSON
        run: |
          curl -s -u "${{ secrets.SONAR_TOKEN }}:" \
            "http://localhost:9000/api/issues/search?componentKeys=my-csharp-app&resolved=false" \
            -o sonar-report.json

     # - name: Zip JSON for DefectDojo Upload
      #  run: |
       #   zip sonar-report.zip sonar-report.json

      - name: Upload to DefectDojo
        run: |
          curl -k -X POST "http://localhost:8080/api/v2/import-scan/" \
            -H "Authorization: Token ${{ secrets.DEFECTDOJO_TOKEN }}" \
            -F "scan_type=Generic Findings Import" \
            -F "file=@sonar-report.json" \
            -F "engagement=1" \
            -F "minimum_severity=Low" \
            -F "active=true" \
            -F "verified=true"
