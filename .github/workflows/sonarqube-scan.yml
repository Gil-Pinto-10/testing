name: SonarQube Analysis

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build-and-analyze: # Changed job ID to be more conventional (hyphens instead of spaces)
    name: Build and Analyze # Name for display in GitHub UI
    runs-on: windows-latest # Still running on Windows, Bash will be Git Bash
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for SonarQube to accurately track new code

      - name: Cache SonarQube Cloud packages
        uses: actions/cache@v4
        with:
          path: ~\sonar\cache # Path for SonarQube's generic cache, ~ works on Windows for user home
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarQube Cloud scanner tools
        id: cache-sonar-scanner # The ID for this step
        uses: actions/cache@v4
        with:
          path: ./.sonar/scanner # Note: Using ./ for current directory consistency
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarQube Cloud scanner tools
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: bash # Specify Bash shell for this step
        run: |
          echo "Cache miss for SonarScanner, installing..."
          mkdir -p ./.sonar/scanner # Bash command to create directory if it doesn't exist
          dotnet tool install dotnet-sonarscanner --tool-path ./.sonar/scanner # Installs or updates if already partially there

      - name: Build and analyze with SonarCloud
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} # SonarCloud token from GitHub secrets
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Automatically provided by GitHub Actions, used for PR decoration
        shell: bash # Specify Bash shell for this step
        run: |
          # Navigate to the tool path to ensure it's in PATH or call it directly
          # Adding the scanner directory to the PATH for this script block
          export PATH="$PATH:$(pwd)/.sonar/scanner"

          echo "Starting SonarScanner begin step..."
          dotnet-sonarscanner begin \
            /k:"Gil-Pinto-10_testing" \
            /o:"gil-pinto-10" \
            /d:sonar.login="${{ secrets.SONAR_TOKEN }}" \
            /d:sonar.host.url="https://sonarcloud.io" \
            /d:sonar.pullrequest.key="${{ github.event.pull_request.number }}" \
            /d:sonar.pullrequest.branch="${{ github.event.pull_request.head.ref }}" \
            /d:sonar.pullrequest.base="${{ github.event.pull_request.base.ref }}" \
            /d:sonar.scm.revision="${{ github.sha }}"

          echo "Building the project..."
          dotnet build --no-incremental # Use --no-incremental for cleaner builds in CI, if needed

          echo "Starting SonarScanner end step..."
          dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"